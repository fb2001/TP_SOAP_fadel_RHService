
package hai702.tp2.demo.client.reservation;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ReservationService", targetNamespace = "http://services.demo.tp2.hai702/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReservationService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ExceptionClient
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "permission", targetNamespace = "http://services.demo.tp2.hai702/", className = "hai702.tp2.demo.client.reservation.Permission")
    @ResponseWrapper(localName = "permissionResponse", targetNamespace = "http://services.demo.tp2.hai702/", className = "hai702.tp2.demo.client.reservation.PermissionResponse")
    @Action(input = "http://services.demo.tp2.hai702/ReservationService/permissionRequest", output = "http://services.demo.tp2.hai702/ReservationService/permissionResponse", fault = {
        @FaultAction(className = ExceptionClient.class, value = "http://services.demo.tp2.hai702/ReservationService/permission/Fault/ExceptionClient")
    })
    public boolean permission(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ExceptionClient
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ExceptionClient
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reservationdoneornot", targetNamespace = "http://services.demo.tp2.hai702/", className = "hai702.tp2.demo.client.reservation.Reservationdoneornot")
    @ResponseWrapper(localName = "reservationdoneornotResponse", targetNamespace = "http://services.demo.tp2.hai702/", className = "hai702.tp2.demo.client.reservation.ReservationdoneornotResponse")
    @Action(input = "http://services.demo.tp2.hai702/ReservationService/reservationdoneornotRequest", output = "http://services.demo.tp2.hai702/ReservationService/reservationdoneornotResponse", fault = {
        @FaultAction(className = ExceptionClient.class, value = "http://services.demo.tp2.hai702/ReservationService/reservationdoneornot/Fault/ExceptionClient")
    })
    public boolean reservationdoneornot(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Client arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws ExceptionClient
    ;

}
